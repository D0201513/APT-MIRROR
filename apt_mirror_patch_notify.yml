---
- name: Configure APT Mirror on all hosts
  hosts: Melur
  become: false
  any_errors_fatal: false
  ignore_unreachable: yes

  vars:
    mirror_url: "http://172.17.9.58/Ubuntu/mirror/archive.ubuntu.com/ubuntu"
    release: "noble"
    is_kali: "{{ ansible_distribution == 'Kali' | default(false) }}"

    # Sources for Kali
    sources_content_kali: |
      deb [arch=amd64 trusted=yes] {{ mirror_url }} {{ release }} main universe
      deb [arch=amd64 trusted=yes] {{ mirror_url }} {{ release }}-updates main universe
      deb [arch=amd64 trusted=yes] {{ mirror_url }} {{ release }}-security main universe

    # Sources for Mint/Ubuntu
    sources_content_mint: |
      deb [arch=amd64 trusted=yes] {{ mirror_url }} {{ release }} main universe
      deb [arch=amd64 trusted=yes] {{ mirror_url }} {{ release }}-updates main universe
      deb [arch=amd64 trusted=yes] {{ mirror_url }} {{ release }}-security main universe

  tasks:
    - name: Patch block
      block:
        - name: Update sources.list with local mirror
          become: yes
          copy:
            dest: /etc/apt/sources.list
            content: "{{ sources_content_kali if is_kali else sources_content_mint }}"
          register: sources_result
          ignore_errors: yes

        - name: Update APT package cache
          become: yes
          apt:
            update_cache: yes
          register: apt_result
          ignore_errors: yes

        - name: Mark patch success
          set_fact:
            patch_status: "SUCCESS"
            sources_file_status: "‚úÖ Updated"
            apt_cache_status: "‚úÖ Refreshed"
      rescue:
        - name: Mark patch failed (from rescue)
          set_fact:
            patch_status: "FAILED"
            sources_file_status: "‚ùå Failed"
            apt_cache_status: "‚ùå Failed"
      always:
        - name: Export results for consolidation
          delegate_to: localhost
          run_once: false
          add_host:
            name: "{{ inventory_hostname }}"
            groups: patch_summary
            patch_status: "{{ patch_status | default('FAILED') }}"
            os: "{{ ansible_distribution ~ ' ' ~ ansible_distribution_version if ansible_distribution is defined else 'Unknown' }}"
            mirror: "{{ mirror_url }}"
            release: "{{ release }}"
            timestamp: "{{ ansible_date_time.iso8601 if ansible_date_time is defined else lookup('pipe','date -Iseconds') }}"
            sources_file_status: "{{ sources_file_status | default('‚ùå Not Attempted') }}"
            apt_cache_status: "{{ apt_cache_status | default('‚ùå Not Attempted') }}"

# ==================== SECOND PLAY ====================

- name: Send consolidated email report
  hosts: localhost
  gather_facts: true
  vars:
    notification_recipients: "aravind_slcs_intern2@aravind.org,karthikeyan.sudhakar@aravind.org"

  tasks:
    - name: Build patch_results list from patch_summary group
      set_fact:
        patch_results: "{{ groups['patch_summary'] | map('extract', hostvars) | list }}"

    - name: Separate success and failure hosts
      set_fact:
        success_hosts: "{{ patch_results | selectattr('patch_status','equalto','SUCCESS') | list }}"
        failed_hosts: "{{ patch_results | selectattr('patch_status','equalto','FAILED') | list }}"

    - name: Send summary email with details
      community.general.mail:
        host: smtp.gmail.com
        port: 587
        secure: starttls
        username: "{{ lookup('env', 'EMAIL_USER') }}"
        password: "{{ lookup('env', 'EMAIL_PASSWORD') }}"
        to: "{{ notification_recipients }}"
        from: "{{ lookup('env', 'EMAIL_USER') }}"
        subject: "Mirror Patch Report - {{ ansible_date_time.iso8601 }}"
        body: |
          Hello Team,

          ‚úÖ Patch Summary Report ‚úÖ

          Total Hosts       : {{ patch_results | length }}
          Successful Patches: {{ success_hosts | length }}
          Failed Patches    : {{ failed_hosts | length }}

          --- ‚úÖ Success Hosts ---
          {% for h in success_hosts %}
          Hostname          : {{ h.inventory_hostname }}
          OS                : {{ h.os }}
          Mirror URL        : {{ h.mirror }}
          Release           : {{ h.release }}
          Timestamp         : {{ h.timestamp }}
          Source List File  : {{ h.sources_file_status }}
          APT Cache Status  : {{ h.apt_cache_status }}

          {% endfor %}

          --- ‚ùå Failed Hosts ---
          {% for h in failed_hosts %}
          Hostname          : {{ h.inventory_hostname }}
          OS                : {{ h.os }}
          Mirror URL        : {{ h.mirror }}
          Release           : {{ h.release }}
          Timestamp         : {{ h.timestamp }}
          Source List File  : {{ h.sources_file_status }}
          APT Cache Status  : {{ h.apt_cache_status }}

          {% endfor %}

          Regards,
          üîß Ansible Automation System
