---
- name: Patch Hosts and Collect Results + Send Email
  hosts: Melur
  become: true
  gather_facts: yes
  vars:
    mirror_url: "http://172.17.9.58/Ubuntu/mirror/archive.ubuntu.com/ubuntu"
    release: "noble"
    is_kali: "{{ ansible_distribution == 'Kali' }}"

    # Sources for Kali
    sources_content_kali: |
      deb [arch=amd64 signed-by=/etc/apt/keyrings/ubuntu.gpg] {{ mirror_url }} {{ release }} main universe
      deb [arch=amd64 signed-by=/etc/apt/keyrings/ubuntu.gpg] {{ mirror_url }} {{ release }}-updates main universe
      deb [arch=amd64 signed-by=/etc/apt/keyrings/ubuntu.gpg] {{ mirror_url }} {{ release }}-security main universe

    # Sources for Mint/Ubuntu
    sources_content_mint: |
      deb [arch=amd64 trusted=yes] {{ mirror_url }} {{ release }} main universe
      deb [arch=amd64 trusted=yes] {{ mirror_url }} {{ release }}-updates main universe
      deb [arch=amd64 trusted=yes] {{ mirror_url }} {{ release }}-security main universe

    notification_recipients: "aravind_slcs_intern2@aravind.org,karthikeyan.sudhakar@aravind.org"
    report_time: "{{ lookup('pipe','date +%Y-%m-%dT%H:%M:%S') }}"

  tasks:
    - block:
        - name: Update sources.list with local mirror
          copy:
            dest: /etc/apt/sources.list
            content: "{{ sources_content_kali if is_kali else sources_content_mint }}"
          register: sources_result

        - name: Update APT package cache
          apt:
            update_cache: yes
          register: apt_result

        - name: Mark success
          set_fact:
            patch_status: "✅ SUCCESS"
      rescue:
        - name: Mark failure
          set_fact:
            patch_status: "❌ FAILED"
            sources_result: { changed: false }
            apt_result: { changed: false }

    - name: Store results for each host
      set_fact:
        host_patch_report: |
          🖥️ Hostname   : {{ inventory_hostname }}
          🧠 OS         : {{ ansible_distribution }} {{ ansible_distribution_version }}
          🌐 Mirror URL : {{ mirror_url }}
          📦 Release    : {{ release }}
          📅 Timestamp  : {{ ansible_date_time.iso8601 }}
          📁 Source     : {{ '✅ Updated' if sources_result.changed else '✅ Already Configured' }}
          🔄 APT Cache  : {{ '✅ Refreshed' if apt_result.changed else '🔄 No Updates Needed' }}
          Status       : {{ patch_status }}

    - name: Add report to global list (on localhost)
      delegate_to: localhost
      run_once: false
      set_fact:
        all_reports: "{{ all_reports | default([]) + [host_patch_report] }}"

    - name: Send consolidated patch report
      delegate_to: localhost
      run_once: true
      community.general.mail:
        host: smtp.gmail.com
        port: 587
        secure: starttls
        username: "{{ lookup('env', 'EMAIL_USER') }}"
        password: "{{ lookup('env', 'EMAIL_PASSWORD') }}"
        to: "{{ notification_recipients }}"
        from: "{{ lookup('env', 'EMAIL_USER') }}"
        subject: "Mirror Patch Report - {{ report_time }}"
        body: |
          Hello Team,

          ✅ Patch Summary Report ✅

          Total Hosts        : {{ groups['Melur'] | length }}
          Successful Patches : {{ all_reports | select('search', '✅ SUCCESS') | list | length }}
          Failed Patches     : {{ all_reports | select('search', '❌ FAILED') | list | length }}

          --- Host Reports ---
          {% for report in all_reports %}
          {{ report }}
          {% endfor %}

          Regards,
          🔧 Ansible Automation System
